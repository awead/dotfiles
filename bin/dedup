#!/Users/awead/.asdf/shims/ruby

require 'digest'
require 'optparse'
require 'pathname'
require 'progressbar'
require 'pry'

def options
  @options ||= OpenStruct.new
end

ARGV.options do |opts|
  opts.on("-x", "--run") { |val| options.run = true }

  opts.on_tail("-h", "--help") do
  	puts opts
  	exit
  end

  opts.parse!
end

def set
  @set ||= {}
end

def files
  @files ||= []
end

def register
  files.map do |file|
    md5 = Digest::MD5.hexdigest(file.read)
    if set.has_key?(md5)
      set[md5] << file
    else
      set[md5] = [file]
    end
    @progress.increment
  end
end

def recursive(dir)
  dir.each_child do |path|
    if path.directory? 
      recursive(path)
    else
      files.push(path)
    end
  end
end

recursive(Pathname.getwd)
@progress = ProgressBar.create(title: "Reading files", total: files.count)
register

set.each do |key, list|
  next if list.count < 2

  print "Duplicate found #{list.map(&:basename).join(", ")}"
  list.shift
  if options.run
    puts "... deleting!"
    list.map(&:delete)
  else
    puts "... NOT deleted"
  end
end
