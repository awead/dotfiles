#!/Users/awead/.asdf/shims/ruby

require 'optparse'
require 'ostruct'
require 'pp'
require 'byebug'
require 'pathname'

def options
  @options ||= OpenStruct.new
end

ARGV.options do |opts|
  opts.on("-t", "--title=", String, "Use the provided value as title instead of the filename") do |val| 
    options.show = val 
  end
  opts.on("-x", "--dry-run", "Print the command and not run it") { |val| options.dryrun = true }
  opts.on("-b", "--batch", "Process all files in the current directory") { |val| options.batch = true }

  opts.on_tail("-h", "--help") do
    puts opts
    exit
  end

  opts.parse!
end

class MkvFile < Pathname
  EXTENSION = ".mkv"

  TYPES = %w(
    -behindthescenes
    -deleted
    -featurette
    -interview
    -scene
    -short
    -trailer
    -other
  )

  VERSIONS = %w(480p 720p 1080p)

  def valid?
    extname == EXTENSION
  end

  def title
    return unless valid?

    value = basename(EXTENSION).to_s
    TYPES.each { |type| value.gsub!(type, "") }
    VERSIONS.each { |version| value.gsub!(" - #{version}", "") }
    value
  end
end

class MkvTitleCommand
  def initialize(mkv_file)
    @mkv_file = mkv_file
  end

  def to_s
    "mkvpropedit -s title=\"#{@mkv_file.title}\" \"#{@mkv_file}\""
  end

  def valid?
    @mkv_file.valid?
  end
end

commands = []
if options.batch
  Pathname.getwd.children.map do |child|
    commands << MkvTitleCommand.new(MkvFile.new(child))
  end
else
  commands = [MkvTitleCommand.new(MkvFile.new(ARGV[0]))]
end

commands
  .select(&:valid?)
  .each do |command|
    if options.dryrun
      puts command
    else
      system(command.to_s)
    end
  end
