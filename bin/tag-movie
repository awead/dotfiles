#!/Users/awead/.asdf/shims/ruby

require 'optparse'
require 'ostruct'
require 'byebug'
require 'pathname'

def options
  @options ||= OpenStruct.new
end

ARGV.options do |opts|
  opts.on("-t", "--title=", String)                       { |val| options.title = val }
  opts.on("-T", "--title-sort=", String)   						    { |val| options.title_sort = val }
  opts.on("-y", "--year=", String, "Release year (YYYY)") { |val| options.year = val }
  opts.on("-p", "--picture=", String, "jpg file")   		  { |val| options.picture = val }
  opts.on("-r", "--run", "Tag the file")                  { |val| options.run = true }

  opts.on_tail("-h", "--help") do
  	puts opts
  	exit
  end

  opts.parse!
end

raise ArgumentError, "Year and picture is required" unless (options.year && options.picture)
raise ArgumentError, "Picture must be a jpg" unless options.picture.match(/jpg$/)

def title
  return options.title if options.title
  ARGV[0].split(/\./).first.capitalize
end

def picture
  picture = Pathname.new(options.picture)
  return picture if picture.exist?
  picture = Pathname.new(ENV['HOME']).join("Downloads", options.picture)
  return picture if picture.exist?
  raise ArgumentError, "#{options.picture} not found"
end

def command
  "AtomicParsley \"#{ARGV[0]}\" "\
    "--stik \"Movie\" "\
    "--year #{options.year} "\
    "--artwork \"#{picture}\" "\
    "--title \"#{title}\" "\
    "--overWrite"
end

if options.run
  system command
else
  puts command
end
